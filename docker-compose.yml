services:
  traefik:
    image: traefik:2.6
    restart: on-failure
    networks:
      pterodactyl:
        aliases:
          - pterodactyl.test
          - vite.pterodactyl.test
          - minio.pterodactyl.test
          - s3.minio.pterodactyl.test
          - wings.pterodactyl.test
          - wings1.pterodactyl.test
    ports:
      - "443:443"
      - "8080:8080"
    security_opt:
      - no-new-privileges=true
    volumes:
      - ./traefik:/etc/traefik:ro
      - ./docker/certificates:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  app:
    # image: ghcr.io/linux123123/ptero-dev/panel:latest
    build:
      context: ./build/panel
      dockerfile: Dockerfile
    stop_grace_period: "1s"
    networks:
      pterodactyl:
        aliases:
          - pterodactyl.test
    volumes:
      - ./code/panel:/var/www/html
      - ./docker/certificates:/etc/certs:ro
      - ./docker/php:/etc/php/mods-available:ro
      - ${HOME}/.ssh:/home/pterodactyl/.ssh:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.rule=Host(`pterodactyl.test`)"
      - "traefik.http.routers.app.entrypoints=https"
      - "traefik.http.routers.app.service=app"
      - "traefik.http.services.app.loadbalancer.server.port=80"
      - "traefik.http.routers.vite-dev-server.tls=true"
      - "traefik.http.routers.vite-dev-server.rule=Host(`vite.pterodactyl.test`)"
      - "traefik.http.routers.vite-dev-server.entrypoints=https"
      - "traefik.http.routers.vite-dev-server.service=vite-dev-server"
      - "traefik.http.services.vite-dev-server.loadbalancer.server.port=8443"
      - "traefik.http.services.vite-dev-server.loadbalancer.server.scheme=https"
    environment:
      TZ: ${TZ:-UTC}
      WWWUSER: ${WWWUSER:-$$(id -u)}
      WWWGROUP: ${WWWGROUP:-$$(id -g)}
      APP_URL: https://pterodactyl.test
      DB_HOST: mysql
      REDIS_HOST: redis
      DB_USERNAME: pterodactyl
      DB_PASSWORD: pterodactyl
      SESSION_DRIVER: redis
      CACHE_DRIVER: redis
  wings:
    # image: ghcr.io/linux123123/ptero-dev/wings:latest
    build:
      context: ./build/wings
      dockerfile: Dockerfile
    stop_grace_period: "1s"
    tty: true
    stdin_open: true
    networks:
      - pterodactyl
    ports:
      - "2022:2022"
    volumes:
      - ./code/wings:/home/root/wings
      - go_modules:/root/go
      - /tmp/pterodactyl:/tmp/pterodactyl
      - /var/lib/pterodactyl:/var/lib/pterodactyl
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wings.tls=true"
      - "traefik.http.routers.wings.rule=Host(`wings.pterodactyl.test`)"
      - "traefik.http.routers.wings.entrypoints=https"
      - "traefik.http.services.wings.loadbalancer.server.port=8080"
    cap_add:
      - SYS_ADMIN
  wings1:
    image: debian:12
    stop_grace_period: "1s"
    tty: true
    stdin_open: true
    networks:
      - pterodactyl
    volumes:
      - ./code/wings/build:/home/root/wings
      - go_modules:/root/go
      - /tmp/pterodactyl1:/tmp/pterodactyl
      - /var/lib/pterodactyl1:/var/lib/pterodactyl
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/wings1:/etc/pterodactyl
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wings1.tls=true"
      - "traefik.http.routers.wings1.rule=Host(`wings1.pterodactyl.test`)"
      - "traefik.http.routers.wings1.entrypoints=https"
      - "traefik.http.services.wings1.loadbalancer.server.port=8080"
    cap_add:
      - SYS_ADMIN
  mysql:
    image: mariadb:10.7
    restart: on-failure
    ports:
      - "3306:3306"
    command:
      - --innodb-buffer-pool-size=1G
      - --innodb-log-file-size=256M
      - --innodb-flush-log-at-trx-commit=0
      - --lower-case-table-names=1
    volumes:
      - mysql:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d:ro
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: panel
      MYSQL_USER: pterodactyl
      MYSQL_PASSWORD: pterodactyl
    networks:
      - pterodactyl
  redis:
    image: redis:alpine
    restart: on-failure
    networks:
      - pterodactyl

networks:
  pterodactyl:
    driver: bridge

volumes:
  mysql:
    driver: local
  minio:
    driver: local
  go_modules:
    driver: local
